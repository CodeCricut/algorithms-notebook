{"version":3,"sources":["webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://gatsby-minimal-simple-blog/./src/components/Bio/Bio.js","webpack://gatsby-minimal-simple-blog/./src/components/Tag/Tag.js","webpack://gatsby-minimal-simple-blog/./src/templates/tags-index.js","webpack://gatsby-minimal-simple-blog/./src/utils/helpers.js","webpack://gatsby-minimal-simple-blog/./src/utils/i18n.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","href","twitter","summary","Tag","countPart","url","text","count","Link","to","defaultProps","styles","tagListDiv","marginLeft","lineHeight","group","allMarkdownRemark","title","location","homeLink","useLang","tTags","formatMessage","breadcrumbs","style","map","tag","key","fieldValue","totalCount","kebabCase","formatReadingTime","minutes","roundedMinutes","Math","round","cups","E","fill","join","formatPostDate","date","lang","Date","toLocaleDateString","args","day","month","year","filter","Boolean","haveSameItem","arr1","s","Set","getPreviousNextNode","posts","fromInd","previous","next","node","isAlphabetNum","match","x","toLowerCase","replace","msgId","messages","msg","console","error"],"mappings":"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","file":"component---src-templates-tags-index-js-0a487ea38941b1e7d7c6.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n        src=\"../../images/profile-pic.png\"\r\n        width={80}\r\n        height={80}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Personal blog by {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            {author.name}\r\n          </a>\r\n          <br />\r\n          {author?.summary || null}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import './Tag.css';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nfunction Tag({ url, text, count, ...restProps }) {\r\n  let countPart;\r\n  if (count != null) {\r\n    countPart = `  (${count})`;\r\n  }\r\n  return (\r\n    <Link className=\"tag\" to={url}>\r\n        #{text}\r\n        {countPart}\r\n    </Link>\r\n  );\r\n}\r\n\r\nTag.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  count: PropTypes.number,\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: null,\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Utilities\r\nimport { kebabCase } from 'utils/helpers';\r\n\r\n// Components\r\nimport { Helmet } from 'react-helmet';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Bio from \"components/Bio\"\r\nimport Layout from \"components/Layout\"\r\nimport Tag from 'components/Tag';\r\nimport { useLang } from 'context/LanguageContext';\r\nimport { formatMessage } from 'utils/i18n';\r\n\r\nconst styles = {\r\n  tagListDiv: {\r\n    marginLeft: '3rem',\r\n    lineHeight: 1.5,\r\n  },\r\n};\r\n\r\nconst TagsIndex = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n  location,\r\n}) => {\r\n  const { homeLink } = useLang();\r\n  const tTags = formatMessage('tTags');\r\n\r\n  return (\r\n    <Layout location={location} title={title} breadcrumbs={[{ text: tTags }]}>\r\n      <aside>\r\n        <Bio />\r\n      </aside>\r\n      <Helmet title={tTags} />\r\n      <div>\r\n        <h1>{tTags}</h1>\r\n        <ul style={styles.tagListDiv}>\r\n          {group.map(tag => (\r\n            <li><Tag\r\n              key={tag.fieldValue}\r\n              text={tag.fieldValue}\r\n              count={tag.totalCount}\r\n              url={`${homeLink}tags/${kebabCase(tag.fieldValue)}/`}\r\n            />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nTagsIndex.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        lang: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TagsIndex;\r\n\r\nexport const pageQuery = graphql`\r\n  query TagsTotalPage($langKey: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        lang\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 1000, filter: { fields: { langKey: { eq: $langKey } } }) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n","function formatReadingTime(minutes) {\r\n  const roundedMinutes = Math.round(minutes)\r\n  const cups = Math.round(minutes / 5);\r\n  if (cups > 5) {\r\n    return `${new Array(Math.round(cups / Math.E)).fill('🍱').join('')} ${roundedMinutes} min read`;\r\n  }\r\n  return `${new Array(cups || 1).fill('☕️').join('')} ${roundedMinutes} min read`;\r\n}\r\n\r\n// `lang` is optional and will default to the current user agent locale\r\nfunction formatPostDate(date, lang) {\r\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\r\n    return date;\r\n  }\r\n\r\n  date = new Date(date);\r\n  const args = [lang, { day: 'numeric', month: 'long', year: 'numeric' }].filter(Boolean);\r\n  return date.toLocaleDateString(...args);\r\n}\r\n\r\nfunction haveSameItem(arr1 = [], arr2 = []) {\r\n  if (arr1 == null || arr2 == null) {\r\n    // false for no tags\r\n    return false;\r\n  }\r\n  const s = new Set([...arr1, ...arr2]);\r\n  const uniques = [...s];\r\n\r\n  return uniques.length < arr1.length + arr2.length;\r\n}\r\n\r\nfunction getPreviousNextNode(posts, fromInd) {\r\n  let previous;\r\n  let next;\r\n  if (posts.length > 0 && fromInd > -1) {\r\n    previous = fromInd <= 0 ? null : posts[fromInd - 1].node;\r\n    next = fromInd === posts.length - 1 ? null : posts[fromInd + 1].node;\r\n  }\r\n\r\n  return {\r\n    previous,\r\n    next,\r\n  };\r\n}\r\n\r\nconst isAlphabetNum = s =>\r\n  /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g.test(s);\r\n\r\nfunction kebabCase(s) {\r\n  if (isAlphabetNum(s)) {\r\n    return s\r\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n      .map(x => x.toLowerCase())\r\n      .join('-');\r\n  }\r\n\r\n  return s\r\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n    .replace(/[\\s_]+/g, '-')\r\n    .toLowerCase();\r\n}\r\n\r\nmodule.exports = {\r\n  formatReadingTime,\r\n  formatPostDate,\r\n  haveSameItem,\r\n  getPreviousNextNode,\r\n  kebabCase,\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useLang } from '../context/LanguageContext';\r\nimport { formatPostDate } from './helpers';\r\n\r\nconst formatMessage = (msgId, ...args) => {\r\n  const { lang, messages } = useLang();\r\n\r\n  const msg = messages[msgId];\r\n\r\n  if (msg == null) {\r\n    console.error(`MessageId [${msgId}] is not exist!!\r\n    You should add it to config/locales/${lang}.js`);\r\n    return msgId;\r\n  }\r\n\r\n  if (typeof msg === 'function') {\r\n    return msg(...args);\r\n  }\r\n\r\n  return msg;\r\n};\r\n\r\nconst formatDate = dateStr => {\r\n  const { lang } = useLang();\r\n\r\n  return formatPostDate(dateStr, lang);\r\n};\r\n\r\nexport { formatMessage, formatDate };\r\n"],"sourceRoot":""}